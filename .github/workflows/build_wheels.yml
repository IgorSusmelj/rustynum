name: Build and Upload Wheels to PyPI

on: [workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [38, 39, 310, 311, 312]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel setuptools_rust
        working-directory: bindings/python

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-05-04
          override: true

      - name: Build Wheels
        run: |
          python setup.py bdist_wheel
        working-directory: bindings/python

      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: bindings/python/dist/*.whl

      # - name: Build Wheels
      #   uses: pypa/cibuildwheel@v2.16.5
      #   with:
      #     output-dir: wheelhouse
      #     package-dir: ./bindings/python
      #   env:
      #     CIBW_BUILD: "cp${{ matrix.python-version }}-*"
      #     CIBW_BEFORE_BUILD: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source $HOME/.cargo/env && rustup default nightly-2024-05-04 && rustup target add aarch64-unknown-linux-gnu && pip install setuptools setuptools_rust wheel"

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: wheelhouse
      #     path: wheelhouse/*.whl

  build_wheels_linux:
    name: Build wheels on Linux for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    services:
      docker:
        image: quay.io/pypa/manylinux2014_x86_64:latest
        options: --user root
    strategy:
      matrix:
        python-version: [38, 39, 310, 311, 312]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup default nightly-2024-05-04

      # - name: Build and repair wheels
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install setuptools wheel setuptools_rust
      #     python setup.py bdist_wheel
      #     auditwheel repair dist/*.whl --plat manylinux2014_x86_64 -w dist/
      #   working-directory: bindings/python
        
      - name: Build Wheels
        run: |
          python setup.py bdist_wheel
        working-directory: bindings/python

      - name: Repair Wheels with Auditwheel (Only on Linux)
        if: runner.os == 'Linux'
        run: |
          pip install auditwheel
          auditwheel repair bindings/python/dist/*.whl --plat manylinux2014_x86_64 -w bindings/python/dist/
        working-directory: .


      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: bindings/python/dist/*.whl


  build_wheels_aarch64:
    name: py${{ matrix.python-version }} on ${{ matrix.os }} (aarch64)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [38, 39, 310, 311, 312]
    steps:
      - uses: actions/checkout@v4

      - name: Setup up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build Wheels (ARM64)
        uses: pypa/cibuildwheel@v2.16.5
        with:
          output-dir: wheelhouse
          package-dir: ./bindings/python
        env:
          CIBW_BUILD: "cp${{ matrix.python-version }}-*"
          CIBW_ARCHS: "aarch64"
          CIBW_BEFORE_BUILD: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source $HOME/.cargo/env && rustup default nightly-2024-05-04 && rustup target add aarch64-unknown-linux-gnu && pip install setuptools setuptools_rust wheel"
          CIBW_ENVIRONMENT_LINUX: PATH="$PATH:$HOME/.cargo/bin" CARGO_NET_GIT_FETCH_WITH_CLI=true

      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: wheelhouse/*.whl

  build_sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.9"
      - name: Build sdist
        run: |
          pip install --upgrade build
          python -m build --sdist
        working-directory: bindings/python
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: bindings/python/dist/*.tar.gz

  upload_to_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_wheels_aarch64, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install twine
        run: pip install twine
      - uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      - name: List files in the artifact directory
        run: ls -R ./artifacts
      - name: Upload Distribution to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload ./artifacts/sdist/*
          twine upload ./artifacts/wheelhouse/*
